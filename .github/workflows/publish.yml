name: Publish Package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Build and Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write  # For creating GitHub releases
      id-token: write  # For npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Publish to npm
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Extract release notes from CHANGELOG
        id: release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          # Extract this version's section from CHANGELOG
          awk "/## \[${VERSION}\]/,/## \[/" CHANGELOG.md | head -n -2 | tail -n +3 > release-notes.md
          echo "Release notes extracted for v${VERSION}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify publication
        run: |
          echo "Waiting for npm propagation..."
          sleep 30
          VERSION=${{ steps.get_version.outputs.version }}
          npm view @tnezdev/docent@${VERSION} version
          echo "âœ“ Package published successfully to npm"
